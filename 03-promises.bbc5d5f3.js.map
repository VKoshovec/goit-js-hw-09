{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAGDC,EAAAJ,EAAKC,KAAKI,SAAjCC,EAAuBF,EAAvBG,MAAOC,EAAgBJ,EAAhBK,KAAMC,EAAUN,EAAVO,OAIpB,SAASC,EAAcC,EAAUC,GAE/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAOC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACvCC,YAAW,WACLP,EAEFK,EAAQ,CAACP,WAAUN,MAAAO,IAInBO,EAAO,CAACR,WAAUN,MAAAO,G,GAEnBA,E,IAhBLd,EAAKC,KAAKsB,iBAAiB,UAoB3B,SAAmBC,GACjBA,EAAEC,iBAEF,IAAK,IAAIC,EAAQ,EAAGA,GAAShB,EAAOiB,MAAOD,IAAS,CAEnD,IAAIE,EAAaC,OAAOvB,EAAMqB,QAAWD,EAAM,GAAKG,OAAOrB,EAAKmB,OAE9Df,EAAcc,EAAOE,GAAYE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALxB,MACnD0B,QAAQC,IAAI,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANH,EAAM,OAC1DI,EAAAtC,GAASuC,OAAOC,QAAS,uBAAwCH,OAAftB,EAAS,QAAYsB,OAANH,EAAM,M,IACpEO,OAAM,SAAAR,G,IAAGlB,EAAQkB,EAARlB,SAAU2B,EAAKT,EAALxB,MACtB0B,QAAQC,IAAI,sBAAuCC,OAAftB,EAAS,QAAYsB,OAANK,EAAM,OACzDJ,EAAAtC,GAASuC,OAAOI,QAAS,sBAAqCN,OAAftB,EAAS,QAAYsB,OAANK,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nconst {delay, step, amount} = refs.form.elements;\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  \n  const shouldResolve = Math.random() > 0.3;\n\n  return promise = new Promise((resolve, reject) => {\n  setTimeout(() => { \n    if (shouldResolve) {\n      // Fulfill\n      resolve({position, delay})\n    }\n    else {\n      // Reject\n      reject({position, delay});\n    }\n  }, delay);\n});\n};\n\nfunction onSubmit (e) {\n  e.preventDefault();\n \n  for (let index = 1; index <= amount.value; index++) {\n\n   let totalDelay = Number(delay.value) + ((index-1) * Number(step.value));\n\n     createPromise(index, totalDelay).then(({ position, delay }) => {\n     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n     Notiflix.Notify.success (`✅ Fulfilled promise ${position} in ${delay}ms`);\n     }).catch(({ position, delay }) => {\n     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n     Notiflix.Notify.failure (`❌ Rejected promise ${position} in ${delay}ms`);\n    });  \n  }  \n};"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","index","value","totalDelay","Number","then","param","delay2","console","log","concat","$parcel$interopDefault","Notify","success","catch","delay3","failure"],"version":3,"file":"03-promises.bbc5d5f3.js.map"}